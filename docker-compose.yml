version: "3"
services:
  # Сервис для Strapi
  strapi:
    container_name: strapi
    build:
      context: ./project-service-backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: 5432
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: production
    volumes:
      - ./_docker_volumes/public/uploads:/opt/app/public/uploads
      - ./config:/opt/app/config
      - ./src:/opt/app/src
    ports:
      - "1337:1337"
    depends_on:
      - postgres

  # Сервис для PostgreSQL
  postgres:
    container_name: postgres
    platform: linux/amd64
    env_file: .env
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Сервис для Next.js
  nextjs:
    container_name: nextjs
    build:
      context: ./project-service  # Укажите путь к вашему проекту Next.js
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - strapi

volumes:
  postgres_volume:
    driver: local
